package de.ronny_h.aoc.year24.day15

import de.ronny_h.aoc.extensions.Coordinates
import de.ronny_h.aoc.extensions.Direction

fun List<String>.warehouseInput(): List<String> = takeWhile { it.isNotBlank() }

class NormalWarehouse(input: List<String>) : Warehouse(input) {
    private val goods = 'O'
    override val leftGoodsChar = goods

    override fun tryToMove(from: Coordinates, direction: Direction, thing: Char): Boolean {
        val target = from + direction
        if (getAt(target) == free) {
            setAt(target, thing)
            setAt(from, free)
            return true
        }
        if (getAt(target) == wall) {
            return false
        }
        check(getAt(target) == goods)
        if (tryToMove(target, direction, goods)) {
            setAt(target, thing)
            setAt(from, free)
            return true
        }
        return false
    }
}
